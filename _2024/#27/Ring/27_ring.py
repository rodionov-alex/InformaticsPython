"""
На каждом 3-м километре кольцевой автодороги с двусторонним движением установлены контейнеры для мусора.
Длина кольцевой автодороги равна 3N километров. Нулевой километр и 3N-й километр автодороги находятся в
одной точке. Известно количество мусора, которое накапливается ежедневно в каждом из контейнеров. Из каждого
пункта мусор вывозит отдельный мусоровоз. Стоимость доставки мусора вычисляется как произведение количества
мусора на расстояние от пункта до центра переработки. Центр переработки отходов открыли в одном из пунктов
сбора мусора таким образом, чтобы общая стоимость доставки мусора из всех пунктов в этот центр была минимальной.
Определите минимальные расходы на доставку мусора в центр переработки отходов.

Входные данные
27_A.txt
27_B.txt

Дано два входных файла (файл A и файл B), каждый из которых в первой строке содержит число N (1 ≤ N ≤ 10 000 000)
— количество пунктов сбора мусора на кольцевой автодороге. В каждой из следующих N строк находится число—
количество мусора в контейнере (все числа натуральные, количество мусора в каждом пункте не превышает 1000).
Числа указаны в порядке расположения контейнеров на автомагистрали, начиная с первого километра.
В ответе укажите два числа: сначала значение искомой величины для файла А, затем — для файла B.

Типовой пример организации данных во входном файле
6
8
20
5
13
7
19

При таких исходных данных, если контейнеры установлены на каждом километре автодороги, необходимо открыть центр
переработки в пункте 6. В этом случае сумма транспортных затрат составит: 1·7+0·19+1·8+2·20+3·5+2·13.

Типовой пример имеет иллюстративный характер. Для выполнения задания используйте данные из прилагаемых файлов.

Предупреждение: для обработки файла B не следует использовать переборный алгоритм, вычисляющий сумму для всех
возможных вариантов, поскольку написанная по такому алгоритму программа будет выполняться слишком долго.

Ответ: 471228 49113954961677
"""

with open('107_27_A.txt') as f:
    n = int(f.readline())
    data = [int(x) * 3 for x in f]
    half = n // 2
    costs = []

    for j in range(n):
        hdata1 = []
        hdata2 = []
        i = j

        while len(hdata1) < half:
            hdata1.append(data[i % n])
            i += 1

        while len(hdata2) < half:
            hdata2.append(data[i % n])
            i += 1

        hdata2.append(0)
        hdata2.reverse()

        cost = 0

        for i, d in enumerate(hdata1):
            cost += i * d

        for i, d in enumerate(hdata2):
            cost += i * d

        costs.append(cost)

    print(min(costs))

with open('107_27_B.txt') as f:
    n = int(f.readline())
    data = [int(x) * 3 for x in f]
    half = n // 2

    costs = [0] * n
    sum1 = sum2 = 0

    for i in range(1, half):
        costs[0] += data[i] * i + data[-i] * i
        sum1 += data[i]
        sum2 += data[-i]

    costs[0] += data[half] * half

    for i in range(1, n):
        costs[i] = costs[i - 1] - sum1 + sum2 - data[(i + half - 1) % n] + data[i - 1]
        sum1 += data[(i + half - 1) % n] - data[i]
        sum2 += data[i - 1] - data[(i + half) % n]

    print(min(costs))
