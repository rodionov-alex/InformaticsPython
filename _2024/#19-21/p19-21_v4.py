"""
Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежат две кучи камней. Игроки ходят по очереди,
первый ход делает Петя. За один ход игрок может добавить в одну из куч (по своему выбору) два камня, или увеличить
количество камней в куче в два раза. Например, пусть в одной куче 10 камней, а в другой 5 камней; такую позицию в
игре будем обозначать (10, 5). Тогда за один ход можно получить любую из четырёх позиций: (12, 5), (20, 5), (10, 7),
(10, 10). Для того чтобы делать ходы, у каждого игрока есть неограниченное количество камней.
Игра завершается в тот момент, когда произведение количеств камней в кучах становится не менее 123. Победителем
считается игрок, сделавший последний ход, т.е. первым получивший такую позицию, при которой произведение числа
камней в кучах будет 123 или более.
В начальный момент в первой куче было 3 камня, во второй куче - S камней; 1 ≤ S ≤ 40.

Ответьте на следующие вопросы:
    Вопрос 1. Найдите наибольшее значение S, при котором Ваня выигрывает своим первым ходом после неудачного хода Пети.

    Вопрос 2. Найдите два наибольших значения S, при которых у Пети есть выигрышная стратегия, причём одновременно
    выполняются два условия:
        − Петя не может выиграть за один ход;
        − Петя может выиграть своим вторым ходом независимо от того, как будет ходить Ваня.
    Найденные значения запишите в ответе в порядке возрастания.

    Вопрос 3. Найдите наибольшее значение S, при котором одновременно выполняются два условия:
        – у Вани есть выигрышная стратегия, позволяющая ему выиграть первым или вторым ходом при любой игре Пети;
        – у Вани нет стратегии, которая позволит ему гарантированно выиграть первым ходом;
        – Петя может выбирать, каким ходом выиграет Ваня.

Ответы: 38
        17 18
        16
"""

def f(s1, s2, m, _all=True):
    if s1 * s2 >= 123:
        return m % 2 == 0
    if m == 0:
        return 0
    h = [f(s1 + 2, s2, m - 1, _all),
         f(s1 * 2, s2, m - 1, _all),
         f(s1, s2 + 2, m - 1, _all),
         f(s1, s2 * 2, m - 1, _all)]
    return any(h) if (m - 1) % 2 == 0 else all(h) if _all else any(h)

print('19)', max([s for s in range(1, 41) if f(3, s, 2, False)]))
print('20)', *[s for s in range(1, 41) if not f(3, s, 1) and f(3, s, 3)][-2:])
print('21)', max([s for s in range(1, 41) if not f(3, s, 2) and f(3, s, 4)]))
