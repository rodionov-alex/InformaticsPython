"""
В одной волшебной местности живут гномы, которые любят варить зелья в магических котлах. Всего есть P котлов,
они пронумерованы, в начальный момент все они свободны. Гномы варят зелья в порядке общей очереди. Первый в
очереди гном, желающий сварить зелье, подходит к свободному котлу с наименьшим номером. Если котел ранее не
использовался, гном может начать варить зелье сразу, а если уже использовался – только через две минуты после
того, как он подошел к такому котлу. Одна порция зелья варится 1 минуту.
На заварку одной порции зелья гном тратит две единицы маны (магической энергии для заварки зелий). Если в один
момент подошли несколько гномов, то варить зелье идёт тот, у кого запас маны меньше. Гном будет варить зелья,
пока у него достаточно маны для их заварки. Гном, у которого осталось меньше двух единиц маны, не может сварить
зелье и уходит.
Известно время в минутах от начала суток, когда каждый гном подошёл к котлам, и количество маны у гнома. Определите,
сколько порций зелья сварят гномы за сутки, и какое наибольшее количество порция зелья смог сварить один гном.
Входные данные представлены в файле 26-125.txt следующим образом. Первая строка входного файла содержит два
натуральных числа: D – количество гномов (1 ≤ D ≤ 100000) и P – количество котлов (1 ≤ P ≤ 1000). В каждой из
последующих D строк содержится информация по одному гному: время подхода гнома к котлам (в минутах с начала
суток) и количество имеющейся у него маны.
В ответе запишите два числа: количество порций зелья, сваренных гномами за сутки, и наибольшее количество порций
зелья, которое смог сварить один гном.
Пример входного файла:
5 2
1 6
4 9
3 1
4 5
9 11
При таких исходных данных за сутки было сварено 14 порций зелья. Наибольшее количество порций (5) было сварено
гномом с количеством маны 11. Гном с количеством маны 1 сразу же уходит, т. к. у него недостаточно маны для
заварки хотя бы одной порции зелья. Ответ: 14 5.

Ответ: 27994 245
"""

with (open('Files/26-125.txt') as f):
    d, p = tuple(map(int, f.readline().split()))
    gnomes = sorted([tuple(map(int, x.split())) for x in f])
    boilers = [0] * p  # Список котлов со временем когда он освободится
    potions_count = 0  # Количество сваренных зелий
    max_potions = 0    # Максимальное количество сваренных зелий одним гномом

    # Пребор гномов
    for time, mana in gnomes:
        # Если маны для варки достаточно
        if mana > 1:
            # Поиск подходящего котла
            for i, boiler in enumerate(boilers):
                # Если котел уже освободился
                if boiler <= time:
                    # Количество зелий которое может сварить гном
                    potions = mana // 2
                    # Время окончания варки зелий
                    finish = time + potions + (2 if boiler != 0 else 0)
                    # Если гном закончит варить зелья наа следующий день
                    if finish >= 1440:
                        # То количество зелий надо уменьшить на разницу во времени
                        potions -= finish - 1440
                        # А время окончания равно последней минуте
                        finish = 1439

                    boilers[i] = finish                      # записать когда котел освободится
                    potions_count += potions                 # добавить сваренные зелья к общему количеству
                    max_potions = max(max_potions, potions)  # обновить максимум
                    break

    print(potions_count, max_potions)

with (open('Files/26-125.txt') as f):
    d, p = tuple(map(int, f.readline().split()))
    gnomes = sorted([tuple(map(int, x.split())) for x in f])
    boilers = [0] * p  # Список котлов со временем когда он освободится
    gnomes_queue = []  # Очередь гномов на варку зелий
    potions_count = 0  # Количество сваренных зелий
    max_potions = 0    # Максимальное количество сваренных зелий одним гномом

    # Пребор гномов
    for time, mana in gnomes:
        # Если маны для варки достаточно
        if mana > 1:
            # Поиск подходящего котла
            for i, boiler in enumerate(boilers):
                # Если котел уже освободился
                if boiler <= time:
                    # Количество зелий которое может сварить гном
                    potions = mana // 2
                    # Время окончания варки зелий
                    finish = time + potions + (2 if boiler != 0 else 0)
                    # Если гном закончит варить зелья наа следующий день
                    if finish >= 1440:
                        # То количество зелий надо уменьшить на разницу во времени
                        potions -= finish - 1440
                        # А время окончания равно последней минуте
                        finish = 1439

                    boilers[i] = finish                      # записать когда котел освободится
                    potions_count += potions                 # добавить сваренные зелья к общему количеству
                    max_potions = max(max_potions, potions)  # обновить максимум
                    break

    print(potions_count, max_potions)

with (open('Files/26-125.txt') as f):
    d, p = tuple(map(int, f.readline().split()))
    gnomes = sorted([tuple(map(int, x.split())) for x in f])
    gnomes_queue = []   # Очередь гномов на варку зелий
    boilers = [-1] * p  # Список котлов: -1 чистый котел, 0 грязный котел
    potions_count = 0   # Количество сваренных зелий
    max_potions = 0     # Максимальное количество сваренных зелий одним гномом
    # [Время начала варки, Мана, Сваренные зелья]
    for t in range(1440):
        # Сварить зелья или освободить котлы
        for i, boiler in enumerate(boilers):
            # Если котел занят, и время начала варки уже настало
            if type(boiler) is list and boiler[0] <= t:
                # Eсли маны хватает - сварить зелье
                if boiler[1] > 1:
                    boilers[i][1] -= 2  # потратил 2 маны
                    boilers[i][2] += 1  # сварил 1 зелье
                # Если маны не хватает - освободить котел
                else:
                    potions_count += boiler[2]                  # Добавить количество сваренных зелий в счетчик
                    max_potions = max(max_potions, boiler[2])   # Сравнить с максимальным количеством
                    boilers[i] = 0                              # Освободить котел (0 - нужна дальнейшая чистка котла)
        # Добавить гномов которые пришли в очередь
        while len(gnomes) and gnomes[0][0] == t:
            gnomes_queue.append(gnomes.pop(0))
        # Отсортировать по количеству маны
        gnomes_queue.sort(key=lambda x: (x[1], x[0]))
        # Занять котлы
        for i in range(boilers.count(0) + boilers.count(-1)):
            while len(gnomes_queue):
                # Найти гнома с достаточным количеством маны
                gnome = [0, 0, 0]
                while gnome[1] < 2 and len(gnomes_queue):
                    gnome = gnomes_queue.pop(0)
                # Найти индекс свободного котла с наименьшим номером
                ind = -1
                for i in range(p):
                    if type(boilers[i]) is int and boilers[i] <= 0:
                        ind = i

                # Занять котел: [к текущему времени добавить 2 минуты на чистку котла, мана, сваренные зелья]
                boilers[ind] = [t + 2 if boilers[ind] == 0 else t, gnome[1], 0]

    print(potions_count, max_potions)




