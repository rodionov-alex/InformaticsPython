"""
Автомат обрабатывает натуральное девятиразрядное число N по следующему алгоритму:
1. Находится сумма разрядов числа N.
2. Полученное число переводится в двоичную систему счисления.
3. К записи, полученной на предыдущем этапе, дописываются разряды по следующему правилу:
  a) Если количество единиц четное дописывается единица слева и два нуля справа,
  b) Если количество единиц нечетное дописывается 10 слева и 1 справа.
Полученная таким образом запись является двоичной записью искомого числа R.
Пример. Дано число N = 123456789. Алгоритм работает следующим образом:
1. Сумма разрядов 45.
2. Двоичная запись 101101.
3. Единиц четное количество, следовательно, получаем 1+101101+00 = 110110100.
4. 1101101002 = 436.
Сколько существует чисел N, для которых результат работы автомата равен 21?

Ответ: 9
"""

# Пойдем методом от обратного. Дано число 21 - переведем его в двоичную с/с.
print(bin(21)[2:])  # 10101
# Очевидно, что данный результат можно получит только способом b). А значит убираем слева 10, а справа 1.
# Получим число 10 в двоичной с/с, в десятичной оно равно 2. Это значит, что сумма цифр числа должна быть равна двум.
# В девятиразрядном числе такое возможно только в следующих случаях:
# 1) 200 000 000
# 2) 110 000 000
# 3) 101 000 000
# 4) 100 100 000
# 5) 100 010 000
# 6) 100 001 000
# 7) 100 000 100
# 8) 100 000 010
# 9) 100 000 001
# Итого 9 чисел.


# Стандартный алгоритм, и пусть весь мир подождет...
#
# from tqdm import tqdm
# count = 0
#
# for n in tqdm(range(10 ** 8, 10 ** 9)):
#     sm = sum(map(int, str(n)))
#     r = bin(sm)[2:]
#
#     if r.count('1') % 2 == 0:
#         r = int('1' + r + '00', 2)
#     else:
#         r = int('10' + r + '1', 2)
#
#     if r == 21:
#         count += 1
#
# print(count)
