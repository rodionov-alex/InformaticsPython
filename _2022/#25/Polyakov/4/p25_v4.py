3, # Функция проверки, является ли нечетное число простым
def is_simple_odd(num):
    sqrt_d = int(num ** 0.5)  # Правая граница для поиска делителей

    # Перебор нечетных чисел
    for i in range(3, sqrt_d + 1, 2):
        # Если найден делитель, то число не простое
        if num % i == 0:
            return False

    # Если делителей не найдено, то число простое
    return True


# Функция поиска непростых делителей числа
def non_simple_divs(num):
    d = int(num ** 0.5)  # Текущий делитель, начиная с целого от корня из num
    divs = []            # Список непростых делителей числа

    # Продолжать поиск делителей пока текущий делитель больше единицы
    while d > 1:
        # Если найден делитель
        if num % d == 0:
            # Если делитель не простое число
            if not is_simple_odd(d):
                divs.append(d)  # Добавить в список непростых делителей

            # Второй (противоположный) делитель
            d2 = num // d

            # Если второй делитель не простое число
            if d != d2 and (not is_simple_odd(d2)):
                divs.append(d2)  # Добавить в список непростых делителей

        d -= 1  # Декремент

    return divs


n = 912673  # Число, с которого начинается поиск
count = 5   # Количество чисел, которые надо найти

# Продолжать поиск пока не найдено count чисел
while count and n > 0:
    n -= 2                      # Декремент
    dList = non_simple_divs(n)  # Список непростых делителей
    s = sum(dList)              # Сумма непростых делителей

    # Если сумма непростых делителей является делителем числа
    if s > 0 and n % s == 0:
        print(n, s, dList)  # Вывод результата
        count -= 1          # Декремент
