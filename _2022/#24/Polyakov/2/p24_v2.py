# Текстовый файл 24_2.txt состоит не более чем из 10^6 символов и содержит только заглавные буквы латинского
# алфавита (A..Z). Строка замыкается в кольцо, то есть за последним символом снова идёт первый. Определите в таком
# кольце максимальную длину цепочки, в которой все символы расположены в алфавитном порядке (одинаковые символы могут
# стоять рядом). Например, для строки CDEABCABC ответом будет 6 (цепочка ABCCDE).
#
# Ответ: 7

with open('24_2.txt') as f:
    s = f.readline()    # Считалть строку
    s += s              # Так как строка закольцована, то удвоим ее
    n = len(s)          # Длина удвоенной строки
    mx = 1              # Максимальная длина подстроки в алфавитном порядке
    count = 1           # Текущее количество символов

    for i in range(n - 1):          # Перебор всех символов
        if s[i] <= s[i + 1]:        # Если следующий больше текущего,
            count += 1              # то счетчик увеличивается на 1,
        else:                       # иначе
            mx = max(mx, count)     # нужно сравнить текущую длину с максимальной
            count = 1               # и сбросить текущую длину до 1

    print(mx)
