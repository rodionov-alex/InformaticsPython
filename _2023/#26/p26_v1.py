# Спутник принимает сигналы от разных станций на земле. Каждый сигнал имеет координату источника – широту и
# долготу с точностью до десятых, выраженных целочисленными значениями – удесятеренными координатами. Например,
# координаты (55,7°; 37,6°) записываются как пара чисел 557 376.
# Найдите значение долготы, с которой отправлено максимальное количество сигналов, а также количество различных
# градусов широты (от -90° до 90°, с отбрасыванием дробной части), с которых пришли сигналы для найденной долготы.
# Если из нескольких долгот пришло одинаковое число сигналов, следует выбрать долготу с наибольшим значением.
# Входные данные представлены в файле 26-96.txt следующим образом. В первой строке входного файла находится число
# N – количество сигналов (натуральное число, не превышающее 100 000). Каждая из следующих N строк содержит два
# натуральных числа, значение широты (-900 до 900) и значение долготы (-1800 до 1800).
# Запишите в ответе два целых числа: значение долготы и количество целых градусов широты для нее.
# Пример входного файла::
# 7
# -123 407
# -125 52
# -128 52
# 802 407
# 809 52
# 805 407
# 850 53
# Для приведённого примера видим две долготы с тремя сигналами: 5,2° и 40,7°. Cчитаем количество целых значений
# широт для наибольшей долготы 40,7° (–12,3°; 80,2°; 80,5°). Следовательно, принято три сигнала с двух различных
# широт: –12° и 80°. Ответ: 407 2.
#
# Ответ: -162 31

from math import trunc

with open('26-96.txt') as f:
    data = [tuple(int(y) for y in x.split()) for x in f.readlines()[1:]]
    longitude_dic = {}  # словарь долготы, долгота - ключ, широты - значения

    # Наполнение словаря
    for d in data:
        latitude = d[0]   # широта
        longitude = d[1]  # долгота

        if longitude in longitude_dic.keys():
            longitude_dic[longitude].append(latitude)
        else:
            longitude_dic[longitude] = [latitude]

    max_signals = (0, 0)  # Максимальное количество сигналов (долгота, кочичество широт)

    # Поиск долготы с которой пришло больше всего сигналов
    for k in sorted(longitude_dic.keys()):
        signals_count = len(longitude_dic[k])

        if signals_count >= max_signals[1]:
            max_signals = (k, signals_count)

    # Широты с отбрасыванием дробной части
    latitudes = [trunc(x / 10) for x in longitude_dic[max_signals[0]]]
    # Результат
    print(max_signals[0], len(set(latitudes)))
