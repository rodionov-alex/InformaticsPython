# В лесополосе осуществляется посадка деревьев: саженцы высаживают рядами на одинаковом расстоянии. Спустя
# некоторое время с помощью аэросъемки выясняют, какие саженцы прижились. Необходимо определить ряд с
# максимальным номером, в котором есть подряд ровно K неприжившихся саженцев при условии, что справа и
# слева от них саженцы прижились.
# Входные данные представлены в файле 26-79.txt следующим образом. . В первой строке записаны два числа:
# N – количество занятых мест (натуральное число, не превышающее 10 000) и K – длина цепочки неприжившихся
# саженцев, которую нужно найти. Каждая из следующих N строк содержит сведения об одном прижившемся саженце –
# два натуральных числа, не превышающих 100 000: номер ряда и номер саженца в ряду.
# В ответе запишите сначала наибольший номер ряда, затем наименьший номер неприжившегося саженца.
# Пример входного файла:
# 6 3
# 40 30
# 40 34
# 50 125
# 50 129
# 50 64
# 50 68
# В примере требуется найти 3 подряд идущих неприжившихся саженца. Ответ: 50 65.
#
# Ответ:

with open('26-79.txt') as f:
    k = int(f.readline().split()[1])
    data = sorted([tuple(map(int, x.split())) for x in f.readlines() if len(x.split()) == 2])
    forest = {}
    res_mx, res_mn = 0, 0

    for d in data:
        row, pos = d

        if row not in forest:
            forest[row] = []

        forest[row].append(pos)

    kres = k + 1

    for r in forest.keys():
        row = forest[r]

        for i in range(1, len(row)):
            if row[i] - row[i - 1] == kres:
                res_mx = r
                res_mn = row[i - 1] + 1  # +1 потому что нужен номер непрежившегося саженца, а в ряду номера прижившихся
                break

    print(res_mx, res_mn)
