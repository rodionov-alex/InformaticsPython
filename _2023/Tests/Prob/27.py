# По каналу связи передаётся последовательность целых неотрицательных чисел – показания прибора, полученные с
# интервалом в 1 мин. в течение T мин. (T – целое число). Прибор измеряет количество атмосферных осадков,
# полученное регистратором за минуту, предшествующую моменту регистрации, и передаёт это значение в условных
# единицах измерения.
# Определите два таких переданных числа, чтобы между моментами их передачи прошло не менее K мин., а их сумма
# была максимально возможной. Укажите найденное суммарное количество осадков.
# Входные данные
# Даны два входных файла (файл A и файл B), каждый из которых в первой строке содержит натуральное число K –
# количество минут, которое должно пройти между двумя передачами показаний, а во второй – количество переданных
# показаний N (1 ≤ N ≤ 10 000 000, N > K). В каждой из следующих N строк находится одно целое неотрицательное
# число, не превышающее 100 000, обозначающее количество осадков за соответствующую минуту.
# Запишите в ответе два числа: сначала значение искомой величины для файла А, затем – для файла B.
# Типовой пример организации данных во входном файле
# 3
# 5
# 15
# 10
# 200
# 0
# 30
# При таких исходных данных максимально возможное суммарное количество осадков равно 45 – это сумма осадков,
# выпавших на первой и пятой минутах.
# Типовой пример имеет иллюстративный характер. Для выполнения задания используйте данные из прилагаемых файлов.
# Предупреждение: для обработки файла B не следует использовать переборный алгоритм, вычисляющий сумму для всех
# возможных вариантов, поскольку написанная по такому алгоритму программа будет выполняться слишком долго.
#
# Ответ: 1219 2090920

with open('27_A_8513.txt') as f:
    m = int(f.readline())
    n = int(f.readline())
    data = list(map(int, f.readlines()))
    mx = 0

    for i in range(n - m - 1):
        z1 = max(data[:i + 1])
        z2 = max(data[i + m:])
        mx = max(mx, z1 + z2)

    print(mx)

with open('27_B_8513.txt') as f:
    m = int(f.readline())
    n = int(f.readline())
    data = list(map(int, f.readlines()))
    mx = 0
    z1 = data[0]
    z2 = max(data[m:])

    for i in range(1, n - m - 1):
        if data[i] > z1:
            z1 = data[i]
            mx = z1 + z2
        if data[i + m] > z2:
            z2 = data[i + m]
            mx = max(mx, z1 + z2)
        elif data[i + m - 1] == z2:
            z2 = max(data[i + m:])
            mx = max(mx, z1 + z2)

    print(mx)
