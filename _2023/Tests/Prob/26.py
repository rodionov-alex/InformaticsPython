# Входной файл содержит заявки пассажиров, желающих сдать свой багаж в камеру хранения. В заявке указаны время
# сдачи багажа и время освобождения ячейки (в минутах от начала суток). Багаж одного пассажира размещается в
# одной свободной ячейке с минимальным номером. Ячейки пронумерованы начиная с единицы. Размещение багажа в
# ячейке или её освобождение происходит в течение 1 мин. Багаж можно поместить в только что освобождённую ячейку
# начиная со следующей минуты. Если в момент сдачи багажа свободных ячеек нет, то пассажир уходит. Определите,
# сколько пассажиров сможет сдать свой багаж в течение 24 ч и какой номер будет иметь ячейка, которую займут
# последней. Если таких ячеек несколько, укажите минимальный номер ячейки.
# Входные данные
# В первой строке входного файла находится натуральное число K, не превышающее 1000, – количество ячеек в
# камере хранения. Во второй строке – натуральное число N (N ≤ 1000), обозначающее количество пассажиров.
# Каждая из следующих N строк содержит два натуральных числа, каждое из которых не превышает 1440: указанное
# в заявке время размещения багажа в ячейке и время освобождения ячейки (в минутах от начала суток).
# Запишите в ответе два числа: количество пассажиров, которые смогут воспользоваться камерой хранения, и номер
# последней занятой ячейки.
# Типовой пример организации данных во входном файле
# 2
# 5
# 30 60
# 40 1000
# 59 60
# 61 1000
# 1010 1440
# При таких исходных данных положить вещи в камеру хранения смогут первый, второй, четвёртый и пятый пассажиры.
# Последний пассажир положит вещи в ячейку 1, так как ячейки 1 и 2 будут свободны.
# Типовой пример имеет иллюстративный характер. Для выполнения задания используйте данные из прилагаемых файлов.
#
# Ответ: 389 133

with open('26_8512.txt') as f:
    cells_count = int(f.readline())
    n = int(f.readline())
    data = sorted([tuple(map(int, x.split())) for x in f.readlines()])
    cells = [0] * cells_count
    count = 0
    last = 0

    for d in data:
        for i, cell in enumerate(cells):
            if cell == 0 or cell < d[0]:
                cells[i] = d[1]
                count += 1
                last = i
                break

    print(count, last + 1)  # +1 т.к. нумерация с 1
