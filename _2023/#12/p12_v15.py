# Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в
# обеих командах v и w обозначают цепочки символов.
# 1. заменить (v, w)
# 2. нашлось (v)
# Первая команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Если цепочки v в строке нет, эта
# команда не изменяет строку. Вторая команда проверяет, встречается ли цепочка v в строке исполнителя Редактор.
# Дана программа для исполнителя Редактор:
# НАЧАЛО
# ПОКА НЕ нашлось(00)
#   заменить(01, 21022)
#   заменить(02, 310)
#   заменить(03, 230112)
# КОНЕЦ ПОКА
# КОНЕЦ
# Известно, что исходная строка начиналась с нуля и заканчивалась нулём, а между ними были только цифры 1, 2 и 3.
# После выполнения данной программы получилась строка, содержащая 104 единицы, 39 двоек и 83 тройки. Сколько цифр
# было в исходной строке?
#
# Ответ: 28

# Обратим внимание, что от порядка цифр результат не изменяется.
# Посмотрим какое количество 1, 2 и 3 дает каждая цифра:
# 1) дает 3 единицы, 1 двойку и 2 тройки
# 2) дает 1 единицы, 0 двойку и 1 тройки
# 3) дает 7 единицы, 3 двойку и 6 тройки

# И исходя из полученных данных подберем количество цифр. Возьмем максимальное количество троек = 13, в этом случае в
# результате получим требуемое количество двоек 39, а значит единиц в исходной строке быть уже не может, иначе
# переполнится количество двоек. Результат: 91 39 78. Благодаря двойкам в исходной строке можно добавлять по одной
# единице и тройке в результирующую строку, но очевидно что в данном случае это не принесет желаемого результата.
# Будем постепенно убавлять количество троек и добавлять единицы в исходную строку так, чтобы количество двоек в
# результирующей строке оставалось равным 39. Задача получить такой результат, чтобы последняя цифра количества
# единиц была больше последней цифры количества троек на 1
# ( 3, 0, 12) -> (93, 39, 78)
# ( 6, 0, 11) -> (95, 39, 78)
# ( 9, 0, 10) -> (97, 39, 78)
# (12, 0,  9) -> (99, 39, 78) -> последняя цифра количества 1 была больше последней цифры количества 3 на единицу
#
# Осталось добавить в исходную строку 5 двоек чтобы количество единиц и троек в результирующей строке соответствовало
# необходимому.
# (12, 5, 9) -> (104, 39, 83)


# Алгоритм перебора
def f():
    max1 = 34
    max2 = 83
    max3 = 13

    for n2 in range(max1):
        for n1 in range(max2):
            for n3 in range(max3):
                s = '0' + n1 * '1' + n2 * '2' + n3 * '3' + '0'

                while '00' not in s:
                    s = s.replace('01', '21022', 1)
                    s = s.replace('02', '310', 1)
                    s = s.replace('03', '230112', 1)

                if s.count('1') == 104 and s.count('2') == 39 and s.count('3') == 83:
                    return n1, n2, n3
    return 0, 0, 0


r1, r2, r3 = f()
print(r1, r2, r3)
print('Result =', 2 + r1 + r2 + r3)  # два нуля плюс количество 1, 2 и 3


# n1 = 12
# n2 = 5
# n3 = 9
# s = '0' + n1 * '1' + n2 * '2' + n3 * '3' + '0'
#
# while '00' not in s:
#     s = s.replace('01', '21022', 1)
#     s = s.replace('02', '310', 1)
#     s = s.replace('03', '230112', 1)
#
# print(s.count('1'), s.count('2'), s.count('3'))
#
# print('Result =', 2 + n1 + n2 + n3)  # два нуля плюс количество 1, 2 и 3
