# Текстовый файл 24-211.txt содержит строку из набора A, B, C, D, E, F, всего не более чем из 10^6 символов.
# Найдите максимальное количество подряд идущих четвёрок символов ABEC, BDAC, CAFB, CFBA, стоящих одна за
# другой и пересекающихся с соседними четвёрками одной буквой. Например, в строке BDEABECAFBDACBD такие пары
# составляют подстроку ABECAFBDAC = ABEC + СAFB + ВDAC, итого 3 четвёрки.
#
# Ответ: 81

with open('24-211.txt') as f:
    s = f.readline().strip().replace('ABEC', 'A*C').replace('BDAC', 'B*C').replace('CAFB', 'C*B').replace('CFBA', 'C*A')
    # Пример: ABECAFBDAC = ABEC + СAFB + ВDAC. После обработки получим строку вида: A*C*B*C. Таким образом, цепочка
    # считается не разорванной если между звездочками только 1 символ.

    mx = 0
    curLen = 0
    symb = 0  # Счетчик символов между звездочками

    for i in s:
        if i == '*':
            curLen += 1  # Количество звездочек равно количеству комбинаций
            symb = 0     # Сброс счетчика
        else:
            symb += 1

            if symb == 2:
                mx = max(mx, curLen)
                curLen = 0

    mx = max(mx, curLen)

    print(mx)
