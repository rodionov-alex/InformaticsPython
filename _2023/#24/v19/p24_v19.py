# Текстовый файл 24-210.txt содержит строку из набора A, B, C, D, E, F, всего не более чем из 10^6 символов.
# Найдите максимальное количество подряд идущих троек символов ABC, BAC, CAB, CBA, стоящих одна за другой и
# пересекающихся с соседними тройками одной буквой. Например, в строке BDEABCBABCABBD такие пары составляют
# подстроку ABCBABCAB = ABC + СBA + ABC + CAB, итого 4 тройки.
#
# Ответ: 47

with open('24-210.txt') as f:
    s = f.readline().strip().replace('ABC', 'A*C').replace('BAC', 'B*C').replace('CAB', 'C*B').replace('CBA', 'C*A')
    # Пример: ABCBABCAB = ABC + СBA + ABC + CAB. После обработки получим строку вида: A*C*A*C*B. Таким образом, цепочка
    # считается не разорванной если между звездочками только 1 символ.

    n = len(s)
    mx = 0
    curLen = 0
    symb = 0  # Счетчик символов между звездочками

    for i in range(n):
        if s[i] == '*':
            curLen += 1  # Количество звездочек равно количеству комбинаций
            symb = 0     # Сброс счетчика
        else:
            if symb == 0:  # Если счетчик равен 0, то цепочка продолжается
                symb = 1
            else:  # в противном случае цепочка разорвана
                mx = max(mx, curLen)
                curLen = 0

    mx = max(mx, curLen)

    print(mx)
