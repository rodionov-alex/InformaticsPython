# Исполнитель преобразует число, записанное на экране. У исполнителя есть три команды, которым присвоены номера:
# 1. Прибавь 2
# 2. Умножь на 3
# 3. Умножь на 4
# Выполняя первую из них, исполнитель увеличивает число на экране на 2, выполняя вторую – умножает на 3,
# выполняя третью – умножает на 4. Программой для исполнителя называется последовательность команд. Сколько
# существует различных программ, которые преобразуют исходное число 1 в число 600, и при этом траектория
# вычислений (включая начальное число) содержит три подряд идущих числа, сумма которых кратна 11.
#
# Ответ: 58085

# Функция поиска всех возможныъх траекторий
def f(a, b, way: list):
    if a == b:
        # Перебор чисел в траектории
        for i in range(len(way) - 2):
            if sum(way[i:i + 3]) % 11 == 0:
                return 1
        else:
            return 0
    elif a > b:
        return 0
    else:
        # Разветвление на 3 пути
        a1 = a + 2
        a2 = a * 3
        a3 = a * 4
        # Создаем 3 копии траектории и добавляем в каждую новые числа
        way1 = way.copy()
        way1.append(a1)
        way2 = way.copy()
        way2.append(a2)
        way3 = way.copy()
        way3.append(a3)
        # Рекурсивно продолжаем поиск
        return f(a1, b, way1) + f(a2, b, way2) + f(a3, b, way3)


print(f(1, 600, [1]))
