# Григорий составляет 16-буквенные слова из букв А, Н, Т, И, У, О, П, Я, выбирая такие, в которых содержится
# комбинация АНТИУТОПИЯ, причем первая буква – не А, а последняя – не Я. Сколько слов сможет составить Григорий?
#
# Ответ: 1003520

# Так как слова имею длину 16 а алфавит состоит из 8 букв, то перебором программа будет проверять 8^16 слов.
# Это порядка 281 474 976 710 656 слов.

# Поскольку первая буква не может быть А а последняя Я, значит подстрока АНТИУТОПИЯ не может стоять в начале
# и конце слова. Получим следующую картину:
# 1. _АНТИУТОПИЯ_____
# 2. __АНТИУТОПИЯ____
# 3. ___АНТИУТОПИЯ___
# 4. ____АНТИУТОПИЯ__
# 5. _____АНТИУТОПИЯ_
# Всего 5 возможных положений подстроки. Количество слов для каждого положения рассчитывается следующим образом:
# Всего имеем 6 мест для других букв алфавита. Причем на первом месте не может быть буквы А, а на последнем Я.
# Значит имеем 4 места по 8 возможных букв и 2 места по 7 возможных букв. Таким образом количество возможных
# комбинаций равно 8^4 * 7^2 = 4096 * 49 = 200704. Это количество комбинаций на одно положение подстроки, а
# всего таких положений 5, поэтому 200704 * 5 = 1003520 слов.

# Если есть энтузиазм и время, то можно подождать программу ниже :)

alf = 'АНТИУОПЯ'
substr = 'АНТИУТОПИЯ'

w_len = 16


def word_comber(comb, count):
    word = comb

    if len(word) < w_len:
        for a in alf:
            count = word_comber(word + a, count)
    else:
        print(word)
        if word[0] != 'А' and word[-1] != 'Я' and\
           substr in word:
            count += 1

    return count


print(word_comber('', 0))
