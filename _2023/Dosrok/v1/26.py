"""
В камере хранения аэропорта есть K ячеек для хранения багажа туристов. Все ячейки пронумерованы,
начиная с единицы. Известно время, в которое каждый турист придёт оставить свой багаж, и в какое
время он заберёт его. С приходом каждого туриста его багаж кладётся в свободную ячейку с наименьшим
номером. Для того, чтобы разгрузить или загрузить ячейку багажом, необходима 1 минута. Со следующей
минуты можно положить в освободившуюся ячейку багаж другого туриста. Если турист пришёл, но свободных
ячеек нет – он багаж оставить не может, поэтому уходит.
Определите, сколько всего туристов придут и оставят свой багаж в ячейках за 24 часа и номер ячейки,
в которую положат последний багаж. Если вариантов выбрать ячейку несколько – выберите свободную ячейку
с наименьшим номером.

Входные данные
В первой строке входного файла находится число K – количество ячеек в аэропорту (натуральное число, не
превышающее 1000). Во второй строке находится число N – количество туристов, которые собираются воспользоваться
ячейками для багажа. В следующих N строках находятся два значения: минута размещения багажа и минута, до
которого планируется хранить багаж в ячейке, отсчёт ведётся от начала суток (все числа неотрицательные, не
превышающие 1440), для каждого туриста – в отдельной строке.

Запишите в ответе два целых числа: сначала количество туристов, которое сможет воспользоваться ячейками для
багажа за 24 часа, затем наименьший номер ячейки, в которую положат последний багаж.

Типовой пример организации данных во входном файле

2
5
30 60
40 1110
59 60
61 120
1230 1440

При таких исходных данных первый, второй, четвёртый и пятый туристы смогут воспользоваться ячейками. Последний
турист оставит свой багаж в первой ячейке (так как первая и вторая ячейка будут свободны).

Ответ: 586 3
"""

with open('26_7602.txt') as f:
    max_cells = int(f.readline())
    data = sorted([tuple(map(int, x.split())) for x in f.readlines()[1:]])
    count = 0
    last = 0

    cells = [0] * max_cells
    timeline = [0] * 1441

    for d in data:
        begin, end = d

        if timeline[begin] < max_cells:
            # Обновляем ячейки до первого встреченного нуля т.к. багаж положится
            for i in range(max_cells):
                if cells[i] == 0 or cells[i] < begin:
                    cells[i] = end  # в ячейке указываем когда она должна освободиться
                    last = i
                    break

            count += 1

            for i in range(begin, end + 1):
                timeline[i] += 1

    print(count, last + 1)  # +1 т.к. нумерация с единицы
